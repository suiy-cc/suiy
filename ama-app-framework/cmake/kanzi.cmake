SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -I${KANZI_SDK_PATH}/Engine/headers/kanzi_v8/include")
SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -I${KANZI_SDK_PATH}/Engine/headers/system/common/include")
SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -I${KANZI_SDK_PATH}/Engine/headers/system/graphics_context/egl/include")
SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -I${KANZI_SDK_PATH}/Engine/headers/system/windowing_system/wayland/include")
SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -I${KANZI_SDK_PATH}/Engine/headers/system/operating_system/linux/include")
SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -I${KANZI_SDK_PATH}/Engine/headers/core/include")
SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -I${KANZI_SDK_PATH}/Engine/headers/user/include")
SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -I${KANZI_SDK_PATH}/Engine/headers/application_framework/common/include")
SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -I${KANZI_SDK_PATH}/Engine/headers/kanzi_components/include")
SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -I${KANZI_SDK_PATH}/Engine/headers/kanzi_v8/include")
SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -I${KANZI_SDK_PATH}/Engine/libraries/common/v8/include")
SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -I${KANZI_SDK_PATH}/Engine/libraries/common/boost/include")
SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -I${KANZI_SDK_PATH}/Engine/libraries/common/icu4c/include")
SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -I${KANZI_SDK_PATH}/Engine/libraries/common/v8/include")
SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -I${KANZI_SDK_PATH}/Engine/libraries/common/freetype/include")
SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -I${KANZI_SDK_PATH}/Engine/libraries/common/harfbuzz/include")
SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -I${KANZI_SDK_PATH}/Engine/libraries/common/libunibreak/include")
SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -I${KANZI_SDK_PATH}/Engine/libraries/common/icu4c/include")
SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -I${KANZI_SDK_PATH}/Engine/libraries/platforms/linux-x86_64/zlib/include")
SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -I${KANZI_SDK_PATH}/Engine/libraries/common/zlib/include")
SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -I${KANZI_SDK_PATH}/Engine/libraries/platforms/linux-x86_64/libjpeg/include")
SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -I${KANZI_SDK_PATH}/Engine/libraries/common/libjpeg/include")
SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -I${KANZI_SDK_PATH}/Engine/libraries/platforms/linux-x86_64/libpng/include")
SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -I${KANZI_SDK_PATH}/Engine/libraries/common/libpng/include")
SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -I${KANZI_SDK_PATH}/Engine/libraries/common/boost/include")
SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -I${KANZI_SDK_PATH}/Engine/libraries/common/wayland-protocols/include")
SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -I${KANZI_SDK_PATH}/Engine/libraries/common/wayland-protocols/src")

SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -O2 -fPIC -Wall")
SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wextra -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-overlength-strings -fno-strict-aliasing -Wno-long-long")
SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -m64 -march=corei7 -mtune=corei7 -mfpmath=sse -msse4.2")
SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -std=c++11 -fpic -fexceptions")
SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DKANZI_V8_API=")
SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DKZ_OPENGL_VERSION=KZ_OPENGL_ES_2_0")
SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DKZ_OPENVG_VERSION=KZ_OPENVG_NONE")
SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DRELEASE -DNDEBUG")
SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DLINUX")
SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DPNG_NO_MMX_CODE")
SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DKANZI_COMPONENTS_API=")
SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DKANZI_V8_API=")
SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DWAYLAND")

SET( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${CMAKE_C_FLAGS}")

SET( KANZI_LDFLAGS                  "-L${KANZI_SDK_PATH}/Engine/lib/linux_wayland_x86_64/ES2_Release")
SET( KANZI_LDFLAGS "${KANZI_LDFLAGS} -L${KANZI_SDK_PATH}/Engine/libraries/platforms/linux-x86_64/boost/lib")
SET( KANZI_LDFLAGS "${KANZI_LDFLAGS} -L${KANZI_SDK_PATH}/Engine/libraries/platforms/linux-x86_64/v8/lib")
SET( KANZI_LDFLAGS "${KANZI_LDFLAGS} -L${KANZI_SDK_PATH}/Engine/libraries/platforms/linux-x86_64/icu4c/lib")
SET( KANZI_LDFLAGS "${KANZI_LDFLAGS} -L${KANZI_SDK_PATH}/Engine/libraries/platforms/linux-x86_64/freetype/lib")
SET( KANZI_LDFLAGS "${KANZI_LDFLAGS} -L${KANZI_SDK_PATH}/Engine/libraries/platforms/linux-x86_64/harfbuzz/lib")
SET( KANZI_LDFLAGS "${KANZI_LDFLAGS} -L${KANZI_SDK_PATH}/Engine/libraries/platforms/linux-x86_64/libunibreak/lib")
SET( KANZI_LDFLAGS "${KANZI_LDFLAGS} -L${KANZI_SDK_PATH}/Engine/libraries/platforms/linux-x86_64/icu4c/lib")
SET( KANZI_LDFLAGS "${KANZI_LDFLAGS} -L${KANZI_SDK_PATH}/Engine/libraries/platforms/linux-x86_64/zlib/lib")
SET( KANZI_LDFLAGS "${KANZI_LDFLAGS} -L${KANZI_SDK_PATH}/Engine/libraries/platforms/linux-x86_64/libjpeg/lib")
SET( KANZI_LDFLAGS "${KANZI_LDFLAGS} -L${KANZI_SDK_PATH}/Engine/libraries/platforms/linux-x86_64/libpng/lib")
SET( KANZI_LDFLAGS "${KANZI_LDFLAGS} -L${KANZI_SDK_PATH}/Engine/libraries/platforms/linux-x86_64/boost/lib")
SET( KANZI_LDFLAGS "${KANZI_LDFLAGS} -L${KANZI_SDK_PATH}/Engine/libraries/platforms/linux-x86_64/wayland-protocols/lib")

SET( KANZI_LDFLAGS "${KANZI_LDFLAGS}  -lwayland-protocols")
SET( KANZI_LDFLAGS "${KANZI_LDFLAGS}  -lboost_chrono -lboost_system")
#SET( KANZI_LDFLAGS "${KANZI_LDFLAGS}  -lboost_thread")
SET( KANZI_LDFLAGS "${KANZI_LDFLAGS}  -lpng -ljpeg -lz")
SET( KANZI_LDFLAGS "${KANZI_LDFLAGS}  -lunibreak -lharfbuzz -lfreetype")
SET( KANZI_LDFLAGS "${KANZI_LDFLAGS}  -lwayland-egl -lwayland-client")
SET( KANZI_LDFLAGS "${KANZI_LDFLAGS}  -lEGL -lGLESv2")
SET( KANZI_LDFLAGS "${KANZI_LDFLAGS}  -licudata -licuuc -licui18n")
SET( KANZI_LDFLAGS "${KANZI_LDFLAGS}  -lv8_snapshot -lv8_libbase -lv8_base -lkanzi_v8")
SET( KANZI_LDFLAGS "${KANZI_LDFLAGS}  -lkanzi_components -luser -lcore -lsystem")
SET( KANZI_LDFLAGS "${KANZI_LDFLAGS}  -lpthread -ldl -lm -lrt")
SET( KANZI_LDFLAGS "${KANZI_LDFLAGS}  -Wl,--start-group")
SET( KANZI_LDFLAGS "${KANZI_LDFLAGS}  -lapplicationframework")
SET( KANZI_LDFLAGS "${KANZI_LDFLAGS}  -Wl,--end-group")

